{"ast":null,"code":"import { useState } from 'react';\nimport axios from 'axios';\nimport uuid from 'uuid';\n\nconst useAxios = url => {\n  const [cards, setCards] = useState([]); // after the first render, fetch our data\n\n  const getData = async name => {\n    try {\n      const res = await axios.get(name ? url + name : url);\n      setCards(cards => [...cards, { ...res.data,\n        id: uuid()\n      }]);\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  const cleanup = () => setCards([]);\n\n  return [cards, getData, cleanup];\n};\n\nexport default useAxios;","map":{"version":3,"sources":["/Users/muhammad/Downloads/react-cards-pokemon/src/hooks/useAxios.js"],"names":["useState","axios","uuid","useAxios","url","cards","setCards","getData","name","res","get","data","id","error","Error","cleanup"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CADyB,CAGzB;;AAEA,QAAMO,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC/B,QAAI;AACH,YAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUF,IAAI,GAAGJ,GAAG,GAAGI,IAAT,GAAgBJ,GAA9B,CAAlB;AACAE,MAAAA,QAAQ,CAAED,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAW,EAAE,GAAGI,GAAG,CAACE,IAAT;AAAeC,QAAAA,EAAE,EAAEV,IAAI;AAAvB,OAAX,CAAZ,CAAR;AACA,KAHD,CAGE,OAAOW,KAAP,EAAc;AACf,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACA;AACD,GAPD;;AASA,QAAME,OAAO,GAAG,MAAMT,QAAQ,CAAC,EAAD,CAA9B;;AAEA,SAAO,CAACD,KAAD,EAAQE,OAAR,EAAiBQ,OAAjB,CAAP;AACA,CAjBD;;AAmBA,eAAeZ,QAAf","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport uuid from 'uuid';\n\nconst useAxios = (url) => {\n\tconst [cards, setCards] = useState([]);\n\n\t// after the first render, fetch our data\n\n\tconst getData = async (name) => {\n\t\ttry {\n\t\t\tconst res = await axios.get(name ? url + name : url);\n\t\t\tsetCards((cards) => [...cards, { ...res.data, id: uuid() }]);\n\t\t} catch (error) {\n\t\t\tthrow new Error(error);\n\t\t}\n\t};\n\n\tconst cleanup = () => setCards([]);\n\n\treturn [cards, getData, cleanup];\n};\n\nexport default useAxios;\n"]},"metadata":{},"sourceType":"module"}