{"ast":null,"code":"import { useState } from 'react';\nimport axios from 'axios';\nimport uuid from 'uuid';\n\nconst useAxios = url => {\n  const [cards, setCards] = useState([]); // after the first render, fetch our data\n\n  const getData = async name => {\n    try {\n      const res = await axios.get(name ? `${url}${name}` : url);\n      console.log(name);\n      setCards(cards => [...cards, { ...res.data,\n        id: uuid()\n      }]);\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  return [cards, getData];\n};\n\nexport default useAxios;","map":{"version":3,"sources":["/Users/muhammad/Downloads/react-cards-pokemon/src/hooks/useAxios.js"],"names":["useState","axios","uuid","useAxios","url","cards","setCards","getData","name","res","get","console","log","data","id","error","Error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CADyB,CAGzB;;AAEA,QAAMO,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC/B,QAAI;AACH,YAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUF,IAAI,GAAI,GAAEJ,GAAI,GAAEI,IAAK,EAAjB,GAAqBJ,GAAnC,CAAlB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAF,MAAAA,QAAQ,CAAED,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAW,EAAE,GAAGI,GAAG,CAACI,IAAT;AAAeC,QAAAA,EAAE,EAAEZ,IAAI;AAAvB,OAAX,CAAZ,CAAR;AACA,KAJD,CAIE,OAAOa,KAAP,EAAc;AACf,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACA;AACD,GARD;;AAUA,SAAO,CAACV,KAAD,EAAQE,OAAR,CAAP;AACA,CAhBD;;AAkBA,eAAeJ,QAAf","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport uuid from 'uuid';\n\nconst useAxios = (url) => {\n\tconst [cards, setCards] = useState([]);\n\n\t// after the first render, fetch our data\n\n\tconst getData = async (name) => {\n\t\ttry {\n\t\t\tconst res = await axios.get(name ? `${url}${name}` : url);\n\t\t\tconsole.log(name);\n\t\t\tsetCards((cards) => [...cards, { ...res.data, id: uuid() }]);\n\t\t} catch (error) {\n\t\t\tthrow new Error(error);\n\t\t}\n\t};\n\n\treturn [cards, getData];\n};\n\nexport default useAxios;\n"]},"metadata":{},"sourceType":"module"}