{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst useAxios = url => {\n  const [response, setResponse] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true); // after the first render, fetch our data\n\n  useEffect(() => {\n    const fetchData = async (data = null) => {\n      try {\n        const res = await axios.get(url); // const json = await res.json();\n\n        setResponse(res.data);\n      } catch (error) {\n        setError(error);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    response,\n    error,\n    isLoading\n  };\n};\n\nexport default useAxios;","map":{"version":3,"sources":["/Users/muhammad/Downloads/react-cards-pokemon/src/hooks/useAxios.js"],"names":["useEffect","useState","axios","useAxios","url","response","setResponse","error","setError","isLoading","setIsLoading","fetchData","data","res","get"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C,CAHyB,CAKzB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,SAAS,GAAG,OAAOC,IAAI,GAAG,IAAd,KAAuB;AACxC,UAAI;AACH,cAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUV,GAAV,CAAlB,CADG,CAEH;;AACAE,QAAAA,WAAW,CAACO,GAAG,CAACD,IAAL,CAAX;AACA,OAJD,CAIE,OAAOL,KAAP,EAAc;AACfC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACA;;AACDG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,KATD;;AAUAC,IAAAA,SAAS;AACT,GAZQ,EAYN,CAACP,GAAD,CAZM,CAAT;AAcA,SAAO;AAAEC,IAAAA,QAAF;AAAYE,IAAAA,KAAZ;AAAmBE,IAAAA;AAAnB,GAAP;AACA,CArBD;;AAuBA,eAAeN,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst useAxios = (url) => {\n\tconst [response, setResponse] = useState([]);\n\tconst [error, setError] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\t// after the first render, fetch our data\n\tuseEffect(() => {\n\t\tconst fetchData = async (data = null) => {\n\t\t\ttry {\n\t\t\t\tconst res = await axios.get(url);\n\t\t\t\t// const json = await res.json();\n\t\t\t\tsetResponse(res.data);\n\t\t\t} catch (error) {\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t\tsetIsLoading(false);\n\t\t};\n\t\tfetchData();\n\t}, [url]);\n\n\treturn { response, error, isLoading };\n};\n\nexport default useAxios;\n"]},"metadata":{},"sourceType":"module"}