{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst useAxios = url => {\n  const [response, setResponse] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // after the first render, fetch our data\n\n  useEffect(() => {\n    const getData = async name => {\n      try {\n        const res = await axios.get(`${url}/${name}`); // const json = await res.json();\n\n        setResponse(res.data);\n      } catch (error) {\n        setError(error);\n      }\n\n      setIsLoading(false);\n    };\n\n    getData();\n  }, [url]);\n  return {\n    response,\n    error,\n    isLoading\n  };\n};\n\nexport default useAxios;","map":{"version":3,"sources":["/Users/muhammad/Downloads/react-cards-pokemon/src/hooks/useAxios.js"],"names":["useEffect","useState","axios","useAxios","url","response","setResponse","isLoading","setIsLoading","getData","name","res","get","data","error","setError"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C,CAFyB,CAIzB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMS,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC/B,UAAI;AACH,cAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAER,GAAI,IAAGM,IAAK,EAAzB,CAAlB,CADG,CAEH;;AACAJ,QAAAA,WAAW,CAACK,GAAG,CAACE,IAAL,CAAX;AACA,OAJD,CAIE,OAAOC,KAAP,EAAc;AACfC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACA;;AACDN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,KATD;;AAUAC,IAAAA,OAAO;AACP,GAZQ,EAYN,CAACL,GAAD,CAZM,CAAT;AAcA,SAAO;AAAEC,IAAAA,QAAF;AAAYS,IAAAA,KAAZ;AAAmBP,IAAAA;AAAnB,GAAP;AACA,CApBD;;AAsBA,eAAeJ,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst useAxios = (url) => {\n\tconst [response, setResponse] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\t// after the first render, fetch our data\n\tuseEffect(() => {\n\t\tconst getData = async (name) => {\n\t\t\ttry {\n\t\t\t\tconst res = await axios.get(`${url}/${name}`);\n\t\t\t\t// const json = await res.json();\n\t\t\t\tsetResponse(res.data);\n\t\t\t} catch (error) {\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t\tsetIsLoading(false);\n\t\t};\n\t\tgetData();\n\t}, [url]);\n\n\treturn { response, error, isLoading };\n};\n\nexport default useAxios;\n"]},"metadata":{},"sourceType":"module"}